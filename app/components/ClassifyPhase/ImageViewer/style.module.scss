@use "sass:math";

$originHeight: 320;
$shrinkedHeight: 160;

.observer {
	position: absolute;
	width: 100%;
	height: 10px;
	bottom: 101%;
}

.previewImage {
	object-fit: scale-down;
	width: 100%;
	height: 50%;
	flex-basis: max-content;
	@media (max-width: 767px){
		position: sticky;
		top: 0px;
		height: $originHeight+px;
		flex-basis: unset;
		z-index: 3;
		background-color: white;
	}
}

.animForward {
	width: var(--domWidth, 100%);
	animation: 0.4s ease 1 both shrinkAnim;
	& ~ div {
		transform: translateY(($shrinkedHeight - $originHeight) + px);
		transition: transform 0.4s ease;
	}
}

.animBackward {
	width: var(--domWidth, 100%);
	animation: 0.4s ease 1 both growAnim;
	& ~ div {
		transform: translateY(($originHeight - $shrinkedHeight) + px);
		transition: transform 0.4s ease;
	}
}

.shrink {
	height: $shrinkedHeight+px;
	& ~ div {
		min-height: calc(100vh - #{$shrinkedHeight}px - 20px);
	}
}

@keyframes shrinkAnim {
	from {
		transform: translateY(0px) scale(1);
	}
	to {
		transform: translateY(math.div($shrinkedHeight - $originHeight,2)+px) scale(var(--newScale, 1));
	}
}

@keyframes growAnim {
	from {
		transform: translateY(0px) scale(1);
	}
	to {
		transform: translateY(math.div($originHeight - $shrinkedHeight,2)+px) scale(var(--newScale, 1));
	}
}

:export {
	domOriginHeight: $originHeight;
	domShrinkedHeight: $shrinkedHeight;
}